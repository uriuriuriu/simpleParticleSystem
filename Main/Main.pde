/*
	プログラムは英文読む感覚で大丈夫。
	逆に言うと簡単な英文として成り立たなかったらだめなプログラムだよねー。
	ってなる。
	読みにくい文、見通しの悪い文、名前と実行内容が違う
	とか文章としてだめだよねーって話。

	プログラム用語
	型：
	座標のPVectorとか真偽値のbooleanとか文字のstring、整数のintとかある。
	変数宣言は型も書かないとダメ。

	クラス：
	関数、変数を内包した構造体。
	クラスと型は意味一緒だけど、文脈的に
	使うときは型、intとかstringとか言語側に定義されてるものが多いかな
	作るのはクラス、って言うことが多いかなー。
	工場みたいなもん。

	関数：
	クラスにある動詞。自分で作れる。右にいけーとか、止まれとか。
	簡潔に伝わる関数名で単一処理がいいかな。使い回しやすい。

	変数：
	パラメーターがしっくりくるかなー。
	値を保持している箱。名前だったり座標だったり、

	インスタンス：
	newして生成したクラス。インタンス同士は別人と考えていいかな。
	ロボット作ってるかんじ。
	工場でいうなら
	パーカー工場(class)
	仙台工場(インスタンス)
	千葉工場、栃木工場とか。それぞれ独立して処理するし、在庫とか違うよねー。



*/

// 別ファイルに作ったParticleSystemクラスという型のps変数を作る
ParticleSystem ps;


// 初期化
void setup() {
	// windowサイズの設定xが640px、yが360px
  size(640,360);
  // ps変数にParticleSystemクラスの生成。
  // windowサイズ半分と50pxの座標を渡す。
  ps = new ParticleSystem(new PVector(width/2,50));
}

// 毎フレーム更新処理
void draw() {
	// 背景色を0(=Red:0, Green:0, Blue:0, Alpha:255)にする
  background(0);
  // psにparticle(粒子)追加してー
  // (別ファイルParticleSystemクラス参照)
  ps.addParticle();
  // ps走らせてー
  // (別ファイルParticleSystemクラス参照)
  ps.run();
}
